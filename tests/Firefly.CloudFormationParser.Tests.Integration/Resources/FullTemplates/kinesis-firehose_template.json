{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Kinesis",
    "Resources": {
        "RawDataBucket": {
            "Type": "AWS::S3::Bucket"
        },
        "ProcessedDataBucket": {
            "Type": "AWS::S3::Bucket"
        },
        "CountTable": {
            "Type": "AWS::Serverless::SimpleTable"
        },
        "ProcessedDataTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "BillingMode": "PAY_PER_REQUEST",
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                }
            }
        },
        "Firehose": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamType": "DirectPut",
                "ExtendedS3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::GetAtt": [
                            "ProcessedDataBucket",
                            "Arn"
                        ]
                    },
                    "CompressionFormat": "GZIP",
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "FirehoseAccessRole",
                            "Arn"
                        ]
                    },
                    "ProcessingConfiguration": {
                        "Enabled": true,
                        "Processors": [
                            {
                                "Type": "Lambda",
                                "Parameters": [
                                    {
                                        "ParameterName": "LambdaArn",
                                        "ParameterValue": {
                                            "Fn::GetAtt": [
                                                "ProcessFunction",
                                                "Arn"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 1
                    },
                    "S3BackupMode": "Enabled",
                    "S3BackupConfiguration": {
                        "BucketARN": {
                            "Fn::GetAtt": [
                                "RawDataBucket",
                                "Arn"
                            ]
                        },
                        "CompressionFormat": "GZIP",
                        "RoleARN": {
                            "Fn::GetAtt": [
                                "FirehoseAccessRole",
                                "Arn"
                            ]
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": 60,
                            "SizeInMBs": 1
                        }
                    }
                }
            }
        },
        "ProcessFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Timeout": 180,
                "CodeUri": "src/",
                "Handler": "process.handler",
                "Runtime": "nodejs12.x",
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "ProcessedDataTable"
                            }
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Ref": "ProcessedDataTable"
                        }
                    }
                }
            }
        },
        "CountFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Timeout": 180,
                "CodeUri": "src/",
                "Handler": "count.handler",
                "Runtime": "nodejs12.x",
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "CountTable"
                            }
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Ref": "CountTable"
                        }
                    }
                }
            }
        },
        "KinesisAnalyticsApp": {
            "Type": "AWS::KinesisAnalytics::Application",
            "Properties": {
                "ApplicationCode": "CREATE OR REPLACE STREAM \"LINK_STREAM\" (\"resourcePath\" varchar(16), link_count INTEGER); CREATE OR REPLACE PUMP \"STREAM_PUMP\" AS INSERT INTO \"LINK_STREAM\" SELECT STREAM \"resourcePath\", COUNT(*) AS link_count\n    FROM \"SESSIONS_STREAM_001\"\n    GROUP BY \"resourcePath\", STEP(\"SESSIONS_STREAM_001\".ROWTIME BY INTERVAL '10' SECOND);\n",
                "Inputs": [
                    {
                        "InputSchema": {
                            "RecordColumns": [
                                {
                                    "Name": "requestId",
                                    "Mapping": "$.requestId",
                                    "SqlType": "bigint"
                                },
                                {
                                    "Name": "ip",
                                    "Mapping": "$.ip",
                                    "SqlType": "varchar(16)"
                                },
                                {
                                    "Name": "status",
                                    "Mapping": "$.status",
                                    "SqlType": "varchar(8)"
                                },
                                {
                                    "Name": "resourcePath",
                                    "Mapping": "$.resourcePath",
                                    "SqlType": "varchar(16)"
                                }
                            ],
                            "RecordFormat": {
                                "RecordFormatType": "JSON"
                            }
                        },
                        "KinesisFirehoseInput": {
                            "ResourceARN": {
                                "Fn::GetAtt": [
                                    "Firehose",
                                    "Arn"
                                ]
                            },
                            "RoleARN": {
                                "Fn::GetAtt": [
                                    "KinesisAnalyticsAccessRole",
                                    "Arn"
                                ]
                            }
                        },
                        "NamePrefix": "SESSIONS_STREAM"
                    }
                ]
            }
        },
        "KinesisAnalyticsOutput": {
            "Type": "AWS::KinesisAnalytics::ApplicationOutput",
            "Properties": {
                "ApplicationName": {
                    "Ref": "KinesisAnalyticsApp"
                },
                "Output": {
                    "DestinationSchema": {
                        "RecordFormatType": "JSON"
                    },
                    "LambdaOutput": {
                        "ResourceARN": {
                            "Fn::GetAtt": [
                                "CountFunction",
                                "Arn"
                            ]
                        },
                        "RoleARN": {
                            "Fn::GetAtt": [
                                "KinesisAnalyticsAccessRole",
                                "Arn"
                            ]
                        }
                    },
                    "Name": "LINK_STREAM"
                }
            }
        },
        "FirehoseAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "firehose.amazonaws.com"
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "S3WritePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": {
                                "Action": [
                                    "s3:PutObject"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    {
                                        "Fn::GetAtt": [
                                            "RawDataBucket",
                                            "Arn"
                                        ]
                                    },
                                    {
                                        "Fn::Sub": [
                                            "${Arn}/*",
                                            {
                                                "Arn": {
                                                    "Fn::GetAtt": [
                                                        "RawDataBucket",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::GetAtt": [
                                            "ProcessedDataBucket",
                                            "Arn"
                                        ]
                                    },
                                    {
                                        "Fn::Sub": [
                                            "${Arn}/*",
                                            {
                                                "Arn": {
                                                    "Fn::GetAtt": [
                                                        "ProcessedDataBucket",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "LambdaInvokePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": {
                                "Action": [
                                    "lambda:InvokeFunction"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    {
                                        "Fn::GetAtt": [
                                            "ProcessFunction",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "KinesisAnalyticsAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "kinesisanalytics.amazonaws.com"
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "KinesisAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": {
                                "Action": [
                                    "firehose:DescribeDeliveryStream",
                                    "firehose:Get*",
                                    "kinesis:Describe*",
                                    "kinesis:Get*",
                                    "kinesis:List*",
                                    "kinesis:Put*"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    {
                                        "Fn::GetAtt": [
                                            "Firehose",
                                            "Arn"
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "PolicyName": "LambdaAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": {
                                "Action": [
                                    "lambda:InvokeFunction",
                                    "lambda:Get*"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    {
                                        "Fn::GetAtt": [
                                            "CountFunction",
                                            "Arn"
                                        ]
                                    },
                                    {
                                        "Fn::Sub": [
                                            "${Func}:$LATEST",
                                            {
                                                "Func": {
                                                    "Fn::GetAtt": [
                                                        "CountFunction",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        }
    }
}